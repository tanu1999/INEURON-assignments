{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d6967924-7c40-4d99-b52e-a72e26e2cd78",
   "metadata": {},
   "outputs": [],
   "source": [
    "#1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ecb42b8f-3132-4790-a568-58de3c07b4fc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " 3\n",
      " 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0, 0, 0, 0, 0], [0, 1, 2, 3, 4], [0, 2, 4, 6, 8]]\n"
     ]
    }
   ],
   "source": [
    "n=int(input())\n",
    "m=int(input())\n",
    "k=[]\n",
    "for i in range(n):\n",
    "    k.insert(i,[])\n",
    "    for j in range(m):\n",
    "        k[i].append(i*j)\n",
    "print(k)\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "71b3df89-84ce-4bf0-8a92-e9859abfdf85",
   "metadata": {},
   "outputs": [],
   "source": [
    "#2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "fc3c5443-8925-4a02-bb7d-335f235fcbcf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " 3\n",
      " 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0, 0, 0, 0, 0], [0, 1, 2, 3, 4], [0, 2, 4, 6, 8]]\n"
     ]
    }
   ],
   "source": [
    "n=int(input())\n",
    "m=int(input())\n",
    "k=[]\n",
    "for i in range(n):\n",
    "    k.insert(i,[])\n",
    "    for j in range(m):\n",
    "        k[i].append(i*j)\n",
    "print(k)\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "804d102a-cd14-4608-b302-d50dd38147f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d2efa215-3e4a-4a51-af9a-dfcc51dbb5f6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter a string : without,hello.bag,world\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hello.bag,without,world\n"
     ]
    }
   ],
   "source": [
    "def sortalpha():\n",
    "    string_var1=input(\"enter a string :\")\n",
    "    string_var2=','.join(sorted(string_var1.split(',')))\n",
    "    print( string_var2)\n",
    "sortalpha()\n",
    "                         "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cf2db54d-0f10-4476-aa2e-c0ccf09fe83e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "2e93ab3c-0a1c-4bc5-9e7c-16c1f95198c0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter a string: hello world again practise makes man perfect and hello world again\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "again and hello makes man perfect practise world\n"
     ]
    }
   ],
   "source": [
    "def alphanumerical():\n",
    "    a1=input(\"enter a string:\")\n",
    "    a2=\" \".join(sorted(set(a1.split(\" \"))))\n",
    "    print(a2)\n",
    "alphanumerical()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3a7d42fe-d323-434b-9eca-853160ab93f1",
   "metadata": {},
   "outputs": [],
   "source": [
    "#5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "4bb896dc-8167-4e91-afdd-a872a1bf3dce",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter a string my name is 1234 @harish\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "LETTERS 14 DIGIT 4\n"
     ]
    }
   ],
   "source": [
    "a1=input(\"enter a string\")\n",
    "a2=\"qwertyuioplkjhgfdsazxcvbnmQWERTYUIOPLKJHGFDSAZXCVBNM\"\n",
    "a3=\"1234567890\"\n",
    "count=0\n",
    "digit=0\n",
    "for i in a1:\n",
    "    if i in a2:\n",
    "        count=count+1\n",
    "    elif i in a3:\n",
    "        digit=digit+1\n",
    "        \n",
    "print(\"LETTERS\",count,\"DIGIT\",digit)\n",
    "    \n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dda13126-69ea-4ee7-8a52-a119a4c8ee82",
   "metadata": {},
   "outputs": [],
   "source": [
    "#6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d06cb21e-a7d2-4f6f-8705-4e7453ce745f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "  ABd1234@1,a F1#,2w3E*,2We3345\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " ABd1234@1\n"
     ]
    }
   ],
   "source": [
    "a =input().split(\",\")\n",
    "a1=\"@#$\"\n",
    "for ele in a:\n",
    "    if len(ele)>=6 and len(ele)<=12:\n",
    "        if any(i.upper() for i in ele):\n",
    "            if any(i.lower() for i in ele):\n",
    "                if any(i for i in ele if i in a1):\n",
    "                    print(ele)\n",
    "                    \n",
    "                    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "517d82a6-2e7f-4f00-9fed-ae519e263f4e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter the Input String:  ABd1234@1,a F1#,2w3E*,2We3345\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ABd1234@1\n"
     ]
    }
   ],
   "source": [
    "a  = input(\"Enter the Input String: \").split(\",\")\n",
    "a1 = \"abcdefghijklmnopqrstuvwxyz\"\n",
    "a2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n",
    "a3 = \"0123456789\"\n",
    "a4 = \"$#@\"\n",
    "for ele in a:\n",
    "    if len(ele)>=6 and len(ele)<=12:\n",
    "        if any(i for i in ele if i in a1):\n",
    "            if any(i for i in ele if i in a2):\n",
    "                if any(i for i in ele if i in a3):\n",
    "                    if any(i for i in ele if i in a4):\n",
    "                        print(ele)\n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7457ff40-40d9-4a34-adc4-9ea1a3641a96",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
