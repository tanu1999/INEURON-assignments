{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a7ec9f85-b26c-4136-b17e-0d000374deff",
   "metadata": {},
   "outputs": [],
   "source": [
    "#1. Write a Python Program to Display Fibonacci Sequence Using Recursion?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "52f09cda-21f1-4f33-b8db-251f09359e1a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "1\n",
      "1\n",
      "2\n",
      "3\n"
     ]
    }
   ],
   "source": [
    "\n",
    "def fibonacci(n):\n",
    "    if n==1:\n",
    "        print(\"0\")\n",
    "    count=0.0\n",
    "    n1=0\n",
    "    n2=1\n",
    "    while count<n:\n",
    "        nth=n1+n2\n",
    "        print(n1)\n",
    "        n1=n2\n",
    "        n2=nth\n",
    "        count=count+1\n",
    "fibonacci(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8b70830c-dcbd-4b1d-9fd3-5922e472eb07",
   "metadata": {},
   "outputs": [],
   "source": [
    "#2. Write a Python Program to Find Factorial of Number Using Recursion?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "2488f6ea-a66d-4f6e-9aaf-aed60e2f4fe1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "120"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def factorial(num):\n",
    "    if num==0 or num==1:\n",
    "        return 1\n",
    "    else:\n",
    "        return num*factorial(num-1)\n",
    "factorial(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1110eebd-0491-47ae-b04c-8d170ebc337b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#3. Write a Python Program to calculate your Body Mass Index?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "c213b9a5-1ddf-4f4a-bfee-1cda52b9899e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter height : 1.52\n",
      "enter weight : 60\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "25.969529085872576\n",
      "over weight\n"
     ]
    }
   ],
   "source": [
    "height=float(input(\"enter height :\"))\n",
    "weight=float(input(\"enter weight :\"))\n",
    "ibm = weight/(height*height)\n",
    "print(ibm)\n",
    "if ibm>18 and ibm<25:\n",
    "    print(\"normal weight\")\n",
    "elif ibm>25 and ibm<30:\n",
    "    print(\"over weight\")\n",
    "elif ibm>30 and ibm<40:\n",
    "    print(\"obisity\")\n",
    "elif ibm>40:\n",
    "    print(\"morbid obisity\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "818d3ddf-160a-4924-b886-dbabab9ddf10",
   "metadata": {},
   "outputs": [],
   "source": [
    "#4. Write a Python Program to calculate the natural logarithm of any number?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "507863db-4712-4f37-8f40-dddf0a514176",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2.6390573296152584\n"
     ]
    }
   ],
   "source": [
    "import math\n",
    "print(math.log(14))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "3d375468-83f6-418c-9b54-aada4f770e3f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.6397385131955606\n"
     ]
    }
   ],
   "source": [
    "print(math.log(14,5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "1a73e326-32aa-4657-b23d-7251cc545037",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.1461280356782377\n"
     ]
    }
   ],
   "source": [
    "print(math.log(14,10))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "19bb4dd8-d644-4e94-aa95-c427215bb407",
   "metadata": {},
   "outputs": [],
   "source": [
    "#5. Write a Python Program for cube sum of first n natural numbers?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4739ddb9-98e3-4ff0-b030-ce9ba5dc57ba",
   "metadata": {},
   "outputs": [],
   "source": [
    "n=int(input())\n",
    "sum=(n**2)*(n+1)**2"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
